//            node Lesson_5/script        - запуск через термінал ≡

//! ============================================================================
//?           this
//*               Всередині ф-цій можна використовувати зарезервоване ключове слово 'this'
//*                 Під час виконання ф-ції, в this записується посилання на об'єкт, в контексті якого вона була викликана.
//*                 Отже, в тілі ф-ції ми можемо отримати доступ до властивостей і методів цього об'єкта.
//                    const bookShelf = {
//                      authors: ["Bernard Cornwell", "Robert Sheckley"],
//                      getAuthors() {
// Task 1                 return this.authors;        },
//                      addAuthor(authorName) {
//                        this.authors.push(authorName);           },       };
//                    console.log(bookShelf.getAuthors()); // ["Bernard Cornwell", "Robert Sheckley"]
//                    bookShelf.addAuthor("Tanith Lee");
//                    console.log(bookShelf.getAuthors()); // ["Bernard Cornwell", "Robert Sheckley", "Tanith Lee"]
//*                Методи getAuthors і addAuthor - це ф-ції (методи об'єкта), які викликаються в контексті об'єкта bookShelf.
//*                Під час їх виконання в this записується посилання на об'єкт bookShelf і ми можемо звернутися до його властивостей і методів.
//! ============================================================================

//* Виконай рефакторинг методів об'єкта 'pizzaPalace', розставивши відсутні 'this' в місцях звернення до властивостей і методів об'єкта.
//*    Метод checkPizza об'єкта pizzaPalace використовує this.
//*    Метод order об'єкта pizzaPalace використовує this

// const pizzaPalace = {
//   pizzas: ["Supercheese", "Smoked", "Four meats"],
//! Change code below this line
//*   checkPizza(pizzaName) {
//*     return pizzas.includes(pizzaName);
//*   },
//*   order(pizzaName) {
//*     const isPizzaAvailable = checkPizza(pizzaName);

//*     if (!isPizzaAvailable) {
//*       return `Sorry, there is no pizza named «${pizzaName}»`;
//*     }

//*     return `Order accepted, preparing «${pizzaName}» pizza`;
//*   },
//! Change code above this line
//   checkPizza(pizzaName) {
//     return this.pizzas.includes(pizzaName);
//   },
//   order(pizzaName) {
//     const isPizzaAvailable = this.checkPizza(pizzaName);

//     if (!isPizzaAvailable) {
//       return `Sorry, there is no pizza named «${pizzaName}»`;
//     }

//     return `Order accepted, preparing «${pizzaName}» pizza`;
//   },
// };

// console.log(pizzaPalace.order("Smoked")); //    "Order accepted, preparing «Smoked» pizza"
// console.log(pizzaPalace.order("Four meats")); //    "Order accepted, preparing «Four meats» pizza"
// console.log(pizzaPalace.order("Big Mike")); //    "Sorry, there is no pizza named «Big Mike»"
// console.log(pizzaPalace.order("Viennese")); //    "Sorry, there is no pizza named «Viennese»"

//! ============================================================================
//* Task 2      АКАУНТ КОРИСТУВАЧА
//! ============================================================================

//* Перед звільненням розробник зламав вихідний код управління акаунтами користувачів нашого сервісу доставки їжі.
//* Виконай рефакторинг методів об'єкта customer, розставивши відсутні 'this' під час звернення до властивостей об'єкта.
//*      Після оголошення об'єкта ми додали виклики методів у тій послідовності, в якій твій код перевірятимуть тести. Будь ласка, нічого там не змінюй.
//*      Значення змінної customer - це об'єкт з властивостями і методами
//*      Виклик customer.getDiscount() повертає поточне значення властивості discount
//*      Виклик customer.setDiscount(0.15) оновлює значення властивості discount
//*      Виклик customer.getBalance() повертає поточне значення властивості balance.
//*      Виклик customer.getOrders() повертає поточне значення властивості orders
//*      Виклик customer.addOrder(5000, "Steak") додає "Steak" в масив значень властивості orders і оновлює баланс
//*      Метод getBalance об'єкта customer використовує this
//*      Метод getDiscount об'єкта customer використовує this
//*      Метод setDiscount об'єкта customer використовує this
//*      Метод getOrders об'єкта customer використовує this
//*      Метод addOrder об'єкта customer використовує this

// const customer = {
//   username: "Mango",
//   balance: 24000,
//   discount: 0.1,
//   orders: ["Burger", "Pizza", "Salad"],
//! Change code below this line
//*   getBalance() {
//*     return balance;
//*   },
//*   getDiscount() {
//*     return discount;
//*   },
//*   setDiscount(value) {
//*     discount = value;
//*   },
//*   getOrders() {
//*     return orders;
//*   },
//*   addOrder(cost, order) {
//*     balance -= cost - cost * discount;
//*     orders.push(order);
//*   },
//! Change code above this line
//   getBalance() {
//     return this.balance;
//   },
//   getDiscount() {
//     return this.discount;
//   },
//   setDiscount(value) {
//     this.discount = value;
//   },
//   getOrders() {
//     return this.orders;
//   },
//   addOrder(cost, order) {
//     this.balance -= cost - cost * this.discount;
//     this.orders.push(order);
//   },
// };

// customer.setDiscount(0.15);
// console.log(customer.getDiscount()); // 0.15
// customer.addOrder(5000, "Steak");
// console.log(customer.getBalance()); // 19750
// console.log(customer.getOrders()); // ["Burger", "Pizza", "Salad", "Steak"]

//! ============================================================================
//* Task 3
//! ============================================================================

//! ============================================================================
//* Task 4
//! ============================================================================

//! ============================================================================
//* Task 5
//! ============================================================================

//! ============================================================================
//* Task 6
//! ============================================================================

//! ============================================================================
//* Task 7
//! ============================================================================

//! ============================================================================
//* Task 8
//! ============================================================================

//! ============================================================================
//* Task 9
//! ============================================================================

//! ============================================================================
//* Task 10
//! ============================================================================

//! ============================================================================
//* Task 11
//! ============================================================================

//! ============================================================================
//* Task 12
//! ============================================================================

//! ============================================================================
//* Task 13
//! ============================================================================

//! ============================================================================
//* Task 14
//! ============================================================================

//! ============================================================================
//* Task 15
//! ============================================================================

//! ============================================================================
//* Task 16
//! ============================================================================

//! ============================================================================
//* Task 17
//! ============================================================================

//! ============================================================================
//* Task 18
//! ============================================================================

//! ============================================================================
//* Task 19
//! ============================================================================

//! ============================================================================
//* Task 20
//! ============================================================================

//! ============================================================================
//* Task 21
//! ============================================================================

//! ============================================================================
//* Task 22
//! ============================================================================

//! ============================================================================
//* Task 23
//! ============================================================================

//! ============================================================================
//* Task 24
//! ============================================================================
