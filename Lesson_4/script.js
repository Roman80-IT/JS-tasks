// node Lesson_4/script - запуск через термінал ≡

//! ============================================================================
//?        виклик функції       посилання на функцію
//*                Ф-ції не відрізняються від чисел, рядків або масивів - це просто спеціальний тип даних (об'єкт вищого порядку),
//*                значення, яке можна зберігати у змінній або передавати у якості аргументу в іншу ф-цію.
//                  function greet(name) {
//                    return `Ласкаво просимо ${name}.`;     }
//*                   // Викликаємо функцію greet
//*                   // і виводимо результат у консоль
//                  console.log(greet("Mango"));
//* Task 1            // Ласкаво просимо Манго.

//*                   // Виводимо функцію 'greet' // у консоль, не викликаючи її
//                  console.log(greet);
//*                    /*
//*                  ƒ greet() {
//*                    return `Ласкаво просимо ${name}.`;      }
//*                У першому лозі ми викликаємо ф-цію greet за допомогою круглих дужок, і в консоль виводиться результат її виконання.
//*                У другому лозі передається посилання на ф-цію, а не результат її виклику (відсутні круглі дужки), тому в консоль виводиться її тіло.
//*                  Це означає, що ф-цію можна присвоїти у змінну або передати як аругмент іншої ф-ції.
//! ============================================================================

//*   Доповни код, щоб у змінній 'result' був результат виконання ф-ції 'makePizza',
//*   а у змінній 'pointer' було посилання на ф-цію 'makePizza'
//*        Значення змінної result отримане за допомогою виклику функції
//*        Значення змінної pointer - це посилання на функцію makePizza

// function makePizza() {
//   return "Your pizza is being prepared, please wait.";
// }

// const result = makePizza();
// const pointer = makePizza;
// console.log(result);
// console.log(pointer);

//! ============================================================================
//?           Ф-ція зворотного виклику (callback, колбек)
//* Task 2                - передається іншій ф-ції як аргумент, а та, в свою чергу, викликає передану ф-цію.
//                    function greet(name) {
//                      console.log(`Ласкаво просимо ${name}.`);
//                    }
//?                Ф-ція вищого порядку (higher order function)
//*               - ф-ція, яка приймає у якості параметрів інші ф-ції або повертає ф-цію у якості результату.
//                    function registerGuest(name, callback) {
//                      console.log(`Реєструємо гостя ${name}.`);
//                      callback(name);
//                    }
//                   registerGuest("Mango", greet);
//*                Ми передали посилання на ф-цію 'greet' як аргумент, тому вона буде присвоєна в параметр 'callback'
//*                і викликана всередині ф-ції 'registerGuest' за допомогою круглих дужок.
//*                Ім'я параметра для колбека може бути довільним, головне пам'ятати, що значенням буде ф-ція.
//! ============================================================================

//*  Доповни ф-цію makeMessage, щоб вона очікувала другим параметром (параметр callback) колбек-функцію і повертала її виклик.
//*  Ф-ція 'deliverPizza' або 'makePizza' буде передаватися як колбек і очікувати аргументом ім'я готової піци, що доставляється.

// Ф-ція makeMessage приймає два параметри, названі відповідно до завдання, pizzaName і callback

function deliverPizza(pizzaName) {
  return `Delivering ${pizzaName} pizza.`;
}

function makePizza(pizzaName) {
  return `Pizza ${pizzaName} is being prepared, please wait...`;
}

//! Chande code below this line
function makeMessage(pizzaName, callback) {
  return callback(pizzaName);
}

//* function makeMessage(pizzaName) {
//*   return;
//* }

console.log(makeMessage("Royal Grand", makePizza)); // "Pizza Royal Grand is being prepared, please wait..."
console.log(makeMessage("Ultracheese", deliverPizza)); // "Delivering Ultracheese pizza."

//! ============================================================================
//* Task 3
//! ============================================================================

//! ============================================================================
//* Task 4
//! ============================================================================

//! ============================================================================
//* Task 5
//! ============================================================================

//! ============================================================================
//* Task 6
//! ============================================================================

//! ============================================================================
//* Task 7
//! ============================================================================

//! ============================================================================
//* Task 8
//! ============================================================================

//! ============================================================================
//* Task 9
//! ============================================================================

//! ============================================================================
//* Task 10
//! ============================================================================

//! ============================================================================
//* Task 11
//! ============================================================================

//! ============================================================================
//* Task 12
//! ============================================================================

//! ============================================================================
//* Task 13
//! ============================================================================

//! ============================================================================
//* Task 14
//! ============================================================================

//! ============================================================================
//* Task 15
//! ============================================================================

//! ============================================================================
//* Task 16
//! ============================================================================

//! ============================================================================
//* Task 17
//! ============================================================================

//! ============================================================================
//* Task 18
//! ============================================================================

//! ============================================================================
//* Task 19
//! ============================================================================

//! ============================================================================
//* Task 20
//! ============================================================================

//! ============================================================================
//* Task 21
//! ============================================================================

//! ============================================================================
//* Task 22
//! ============================================================================

//! ============================================================================
//* Task 23
//! ============================================================================

//! ============================================================================
//* Task 24
//! ============================================================================

//! ============================================================================
//* Task 25
//! ============================================================================

//! ============================================================================
//* Task 26
//! ============================================================================

//! ============================================================================
//* Task 27
//! ============================================================================

//! ============================================================================
//* Task 28
//! ============================================================================

//! ============================================================================
//* Task 29
//! ============================================================================

//! ============================================================================
//* Task 30
//! ============================================================================

//! ============================================================================
//* Task 31
//! ============================================================================

//! ============================================================================
//* Task 32
//! ============================================================================

//! ============================================================================
//* Task 33
//! ============================================================================

//! ============================================================================
//* Task 34
//! ============================================================================

//! ============================================================================
//* Task 35
//! ============================================================================

//! ============================================================================
//* Task 36
//! ============================================================================
